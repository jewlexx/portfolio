---
import Shrunk from './Shrunk/index.svelte';
import { links } from '../lib/links';
import HeaderLink from './HeaderLink.svelte';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<header>
	<nav class="nav">
		<span class="title-image">
			<a class="logolink" href="/" rel="prefetch">
				üåè
				<!-- <img alt="Profile" class="monogram" src={ProfilePicture.src} /> -->
			</a>
			<h2><Shrunk long={title} client:load /></h2>
		</span>
		<!-- TODO: Add headerlinks on mobile screens -->
		<Shrunk hide="portrait" client:load>
			<HeaderLink class="link" href="/about"><h3>About</h3></HeaderLink>
			<HeaderLink class="link" href="/projects"><h3>Projects</h3></HeaderLink>
		</Shrunk>
		<span class="links-container">
			{
				links.map(({ emoji: Emoji, url, title }) => (
					<a href={url} {title} target="_blank" rel="noopener noreferrer" class="role">
						<Emoji />
					</a>
				))
			}
		</span>
	</nav>
</header>

<style lang="scss">
	@use '../styles/transitions';
	@use '../styles/palette' as *;

	.title-image {
		display: flex;
		align-items: center;

		.logolink {
			display: block;
			color: $t-fg;
			text-decoration: none;

			font-size: 2.5rem;
			/* border: 5px solid black; */
			/* background-color: white; */
			border-radius: 100%;
			/* padding: 0.25rem; */
			margin-right: 1rem;

			// Only enable motion if the user has no preference
			@include transitions.springy-transform(500ms);

			&:hover {
				transform: scale(1.2);
			}

			img {
				display: flex;
				align-items: center;
				justify-content: center;
				width: 2em;
				height: 2em;
				margin-right: 0.5rem;
				color: $black;
				font-weight: 900;
				letter-spacing: -0.125rem;
				border: 3px solid currentColor;
				border-radius: 50%;
			}
		}
	}

	.nav {
		background-color: lighten($dark-gray, 10%);
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding-top: 1rem;
		padding-right: 2rem;
		padding-bottom: 1rem;
		padding-left: 2rem;
	}

	/* .link {
		color: $t-subdue;
		display: block;
		margin-left: 1rem;
		text-decoration: none;
		font-size: $f-d1;
		text-transform: uppercase;
		padding-top: 0.75em;
		padding-bottom: 0.75em;
		&:focus,
		&:hover {
			color: $t-active;
		}
	} */

	.monogram {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 2em;
		height: 2em;
		margin-right: 0.5rem;
		color: $black;
		font-weight: 900;
		letter-spacing: -0.125rem;
		border: 3px solid currentColor;
		border-radius: 50%;
	}

	.links-container {
		display: flex;
	}

	.role {
		text-decoration: none;
		position: relative;
		font-weight: 900;
		color: $t-bg;
		background-color: $t-fg;
		padding: 0.25em;
		z-index: 2;
		border-radius: 0.25rem;

		display: flex;
		align-items: center;
		justify-content: center;

		@media (min-width: $w-s) {
			font-size: $f-u3;
		}

		+ .role {
			margin-left: 0.5em;
		}

		@include transitions.springy-transform(500ms);

		&:hover {
			color: $t-fg;

			transform: scale(1.2);

			&:nth-of-type(1) {
				$color: $black;
				background-color: $color;
				box-shadow: 0px 0px 3px #000 inset;
			}

			&:nth-of-type(2) {
				$color: $purple;
				background-color: $color;
				box-shadow: 0px 0px 3px #000 inset;
			}

			&:nth-of-type(3) {
				$color: $blue;
				background-color: $color;
				box-shadow: 0px 0px 3px #000 inset;
			}

			&:nth-of-type(4) {
				$color: $green;
				background-color: $color;
				box-shadow: 0px 0px 3px #000 inset;
			}
		}
	}
</style>
